{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  getAvailableCoursesForEmp(id) {\n    return axios.get(API_URL + `availableCourses/${id}`);\n  }\n  getEnrolledCoursesForEmp(id) {\n    return axios.get(API_URL + `enrolledCourses/${id}`);\n  }\n  addToEnrolledCourses(id, cid) {\n    return axios.post(API_URL + `enrollCourse/${id}`);\n  }\n  register(username, email, designationLevel, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      designationLevel,\n      password\n    });\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getAvailableCoursesForEmp","id","get","getEnrolledCoursesForEmp","addToEnrolledCourses","cid","register","email","designationLevel"],"sources":["D:/webd/working/EmployeeCourse/springboot-reactjs-jwt-authentication-main/react-redux-jwt/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  getAvailableCoursesForEmp(id){\n    return axios.get(API_URL +`availableCourses/${id}`);\n  } \n  getEnrolledCoursesForEmp(id){\n    return axios.get(API_URL +`enrolledCourses/${id}`);\n  } \n  addToEnrolledCourses(id,cid){\n    return axios.post(API_URL +`enrollCourse/${id}`);\n  } \n  register(username, email, designationLevel,password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      designationLevel,\n      password,\n    });\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,WAAW,CAAC;EAChBC,KAAK,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB,OAAOL,KAAK,CACTM,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MAAEG,QAAQ;MAAEC;IAAS,CAAC,CAAC,CAChDE,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MAEA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAM,MAAM,GAAG;IACPJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC;EACAC,yBAAyB,CAACC,EAAE,EAAC;IAC3B,OAAOlB,KAAK,CAACmB,GAAG,CAAClB,OAAO,GAAG,oBAAmBiB,EAAG,EAAC,CAAC;EACrD;EACAE,wBAAwB,CAACF,EAAE,EAAC;IAC1B,OAAOlB,KAAK,CAACmB,GAAG,CAAClB,OAAO,GAAG,mBAAkBiB,EAAG,EAAC,CAAC;EACpD;EACAG,oBAAoB,CAACH,EAAE,EAACI,GAAG,EAAC;IAC1B,OAAOtB,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,gBAAeiB,EAAG,EAAC,CAAC;EAClD;EACAK,QAAQ,CAACnB,QAAQ,EAAEoB,KAAK,EAAEC,gBAAgB,EAACpB,QAAQ,EAAE;IACnD,OAAOL,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MACpCG,QAAQ;MACRoB,KAAK;MACLC,gBAAgB;MAChBpB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIH,WAAW,EAAE"},"metadata":{},"sourceType":"module"}